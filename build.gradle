plugins {
    id 'com.jfrog.bintray' version '1.7.3'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'io.github.intbit'
version = '0.1.0'

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

task testsJar(type: Jar, dependsOn: classes) {
    classifier = 'tests'
    from sourceSets.test.output
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        locale = 'en_US'
        encoding = 'UTF-8'
    }
}

jacoco {
    toolVersion = "0.7.7.201606060606"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

// "./gradlew check" runs jacocoTestReport
check.dependsOn('jacocoTestReport')

findbugs {
    toolVersion = '3.0.1'
    effort = 'max'
    reportLevel = 'high'
    ignoreFailures = false
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'pl.pragmatists:JUnitParams:1.0.5'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact testsJar
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publications = ['mavenJava']

    dryRun = false
    publish = true

    pkg {
        userOrg = 'intbit'
        repo = 'maven'
        name = 'intbit'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/intbit/intbit'
        publicDownloadNumbers = true

        version {
            name = project.version
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")
            vcsTag = "v${project.version}"
        }
    }
}

task release() {
    dependsOn publish
    dependsOn bintrayUpload
    doLast {
        println "Released ${project.version}."
    }
}
